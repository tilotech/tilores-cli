package main

import (
	"log"
	"net/http"
	"os"
	"os/exec"

	"github.com/99designs/gqlgen/graphql/handler"
	"github.com/99designs/gqlgen/graphql/playground"
	"gitlab.com/tilotech/tilores-plugin-api/dispatcher"
	"{{.ModulePath}}/graph"
	"{{.ModulePath}}/graph/generated"
)

const defaultPort = "8080"

func main() {
	port := os.Getenv("PORT")
	if port == "" {
		port = defaultPort
	}

	dsp, kill, err := dispatcher.Initialize(exec.Command("./tilores-plugin-dispatcher"))
	defer kill()
	if err != nil {
		log.Fatal(err)
	}

	srv := handler.NewDefaultServer(generated.NewExecutableSchema(generated.Config{Resolvers: &graph.Resolver{
		Dispatcher: dsp,
	}}))

	http.Handle("/", playground.Handler("{{.ApplicationName}} API", "/query"))
	http.Handle("/query", srv)

	log.Printf("connect to http://localhost:%s/ for your personalized {{.ApplicationName}} API", port)
	log.Fatal(http.ListenAndServe(":"+port, nil))
}
