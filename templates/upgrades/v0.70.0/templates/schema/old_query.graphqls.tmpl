# {{.GeneratedMsg}}

type Query {
  """Search searches for entities that match the search parameters."""
  search(input: SearchInput!): SearchOutput! @hasPrivilege(privilege: "tilores/query.search")

  """Entity returns a single entity with the provided id."""
  entity(input: EntityInput!): EntityOutput! @hasPrivilege(privilege: "tilores/query.entity")

  """EntityByRecord returns a single entity that contains the record with the provided id."""
  entityByRecord(input: EntityByRecordInput!): EntityOutput! @hasPrivilege(privilege: "tilores/query.entity")
}

"""SearchInput the data input used for search."""
input SearchInput {
  """The parameters used to search for entities"""
  parameters: SearchParams!

  """Can be used to only consider records that fullfil the provided filter conditions.

Providing at least one filter will hide the records of that entity that do not
match the specified rules. As a result all edges, duplicates and hits will be
adjusted accordingly. Special cases like receiving multiple entities or not
seeing half of an entity because the only connecting record was ignored. This is
usually the desired behaviour, for other use cases consider the record insights
feature to apply some filtering.

It can be used with a variety of what-if scenarios. E.g. you can see the state
of an entity at any given time in the past using the until or before filter
condition. Or you could use it to see what will happen when records are going to
be deleted due to old age using the after or since condition. Or you could see
how an entity would look like without the records from a specific source using
equals and invert.

For cases when after filtering one original entity is returned as multiple ones,
then their entity IDs will be similar to each other, only suffixed with a
consecutive number.

This parameter conflicts with the page parameter. Its possible to use
both parameters at the same time, but the results may be unexpected, because
paging is done during search, while considerRecords is done after the search."""
  considerRecords: [FilterCondition!]

  """By default all entities are returned from the search. When expecting a huge
amount of entities, you may want to consider to limit the results. Setting the
page parameter enables the paging mode and sets the current page.

The first page starts with the number 1.

By default each page has 10 entities, but that can be changed with the pageSize
parameter.

This parameter conflicts with the considerRecords parameter. Its possible to use
both parameters at the same time, but the results may be unexpected, because
paging is done during search, while considerRecords is done after the search."""
  page: Int

  """Sets the page size for the paging mentioned in the page parameter."""
  pageSize: Int
}

"""SearchOutput the output of search query."""
type SearchOutput {
  """All entities matching the search parameters based on the search configuration."""
  entities: [Entity!]!
}

"""EntityInput the data input used for entity query."""
input EntityInput @goModel(model: "github.com/tilotech/tilores-plugin-api/dispatcher.EntityInput") {
  """Entity ID to search for"""
  id: ID!

  """Can be used to only consider records that fullfil the provided filter conditions.

See SearchInput for further information."""
  considerRecords: [FilterCondition!]
}

"""EntityByRecordInput the data input used for entity by record query."""
input EntityByRecordInput @goModel(model: "github.com/tilotech/tilores-plugin-api/dispatcher.EntityByRecordInput") {
  """Record ID to search for"""
  id: ID!

  """Can be used to only consider records that fullfil the provided filter conditions.

See SearchInput for further information."""
  considerRecords: [FilterCondition!]
}

"""SearchOutput the output of entity query."""
type EntityOutput {
  entity: Entity
}
